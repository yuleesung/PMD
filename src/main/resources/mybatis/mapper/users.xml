<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="users">

	<!-- UserVO의 멤버변수 값을 채우기 위한 resultMap -->
	<resultMap type="com.pmd.vo.UserVO" id="map3">
		<id column="u_idx" property="u_idx"/>
		<collection property="b_list" ofType="com.pmd.vo.BulletinVO" select="bulletin.boardList" column="u_idx"/>
	</resultMap>
	
	<!-- 유저 한 명이 쓴 댓글 모음 -->
	<resultMap type="com.pmd.vo.UserVO" id="map4">
		<id column="u_idx" property="u_idx"/>
		<collection property="c_list" ofType="com.pmd.vo.Bulletin_C_VO" select="bulletin_c.u_commList" column="u_idx"/>
	</resultMap>

	<!-- 회원 아이디만 빼오기 -->
	<select id="getID" resultType="String" parameterType="String">
		select u_id from users_t where u_idx = #{u_idx}
	</select>
	
	<!-- 회원 로그인 -->
	<select id="login" resultType="com.pmd.vo.UserVO" parameterType="java.util.Map">
		select u_idx, u_id, email, u_phone, reg_date, u_name, nickname, sns_id, sns_type, sns_profile, status from users_t where u_id = #{u_id} and u_pw = #{u_pw}
	</select>

	<!-- 회원 가입 -->
	<insert id="join" parameterType="com.pmd.vo.UserVO">
		insert into users_t(u_idx, u_id, u_pw, u_name, email, u_phone, reg_date, status, nickname)
		values(users_t_seq.nextval, #{u_id}, #{u_pw}, #{u_name}, #{email}, #{u_phone}, sysdate, 0, #{nickname})
	</insert>
	
	<!-- 게시물을 작성한 회원정보 -->
	<select id="getMember" resultMap="map3" parameterType="String">
		select u_idx, u_id, u_name, email, u_phone, reg_date, nickname from users_t where u_idx = #{u_idx} 
	</select>
	
	<!-- 회원 가입시 아이디 일치 -->
	<select id="matchMember" resultType="String" parameterType="String">
		select u_id from users_t where u_id = #{u_id}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="com.pmd.vo.UserVO">
		update users_t
		<set>
			<trim suffixOverrides=",">
				<if test="u_pw != null">
					u_pw = #{u_pw},
				</if>
				<if test="u_name != null">
					u_name = #{u_name},
				</if>
				<if test="email != null">
					email = #{email},
				</if>
				<if test="u_phone != null">
					u_phone = #{u_phone},
				</if>
				<if test="nickname != null">
					nickname = #{nickname},
				</if>
			</trim>
		</set>
		where u_idx = #{u_idx}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="delMember" parameterType="java.util.Map">
		update users_t set status = 1 where u_idx = #{u_idx} and u_pw = #{u_pw}
	</update>
	
	<!-- 소셜 회원가입 -->
	<insert id="socialReg" parameterType="java.util.Map">
		insert into users_t(u_idx<if test="u_name != null">, u_name</if>, nickname, email, sns_id, sns_type, reg_date, status <if test="sns_profile != null">, sns_profile</if>)
		values(users_t_seq.nextval<if test="u_name != null">, #{u_name}</if>, #{nickname}, #{email}, #{sns_id}, #{sns_type}, sysdate, 0 <if test="sns_profile != null">, #{sns_profile}</if>)
	</insert>
	
	<!-- 소셜 로그인 -->
	<select id="socialLogin" resultType="com.pmd.vo.UserVO" parameterType="java.util.Map">
		select * from users_t where sns_id = #{sns_id} and status = 0 and sns_type = #{sns_type}
	</select>
	
	<!-- 소셜 회원탈퇴를 했을 때, DB에 저장된 ID값이 있는지 확인 -->
	<select id="socialCheck" resultType="com.pmd.vo.UserVO" parameterType="java.util.Map">
		select * from users_t where sns_id = #{sns_id} and sns_type = #{sns_type}
	</select>
	
	<!-- 소셜 회원탈퇴 후 재가입을 할 경우 -->
	<update id="socialReReg" parameterType="java.util.Map">
		update users_t set status = 0, reg_date = sysdate where sns_id = #{sns_id} and sns_type = #{sns_type}
	</update>
	
	<!-- 소셜 연동 해제(탈퇴) -->
	<update id="socialLeave" parameterType="java.util.Map">
		update users_t set status = 1 where sns_id = #{sns_id} and sns_type = #{sns_type}
	</update>
	
	<!-- 이메일 중복검사 -->
	<select id="checkEmail" parameterType="String" resultType="String">
		select email from users_t where email = #{email}
	</select>
	
	<!-- 전화번호 중복검사 -->
	<select id="checkPhone" parameterType="String" resultType="String">
		select u_phone from users_t where u_phone = #{u_phone}
	</select>
	
	<!-- 회원 정지 또는 해제 -->
	<update id="blockOrRelUser" parameterType="java.util.Map">
		update users_t set status = #{status} where u_idx = #{u_idx}
	</update>
	
	<!-- 관리자 로그인 -->
	<select id="adminLogin" parameterType="java.util.Map" resultType="com.pmd.vo.UserVO">
		select u_idx, u_id, email, u_phone, reg_date, u_name, nickname, sns_id, sns_type, sns_profile, status from users_t where u_id = #{u_id} and u_pw = #{u_pw} and status = 9
	</select>
	
	<!-- 유저 목록 -->
	<select id="listUser" parameterType="java.util.Map" resultMap="map4">
		select * from(	
			select rownum r_num, a.* from
				(select u_idx, u_id, email, u_phone, reg_date, u_name, nickname, sns_id, sns_type, sns_profile, status from users_t where status in(0, 1, 2) order by u_idx desc) a
		)where r_num between #{begin} and #{end}
	</select>
	
	<!-- 유저 수 -->
	<select id="getCountUser" resultType="int">
		select count(*) from users_t where status in(0, 1, 2)
	</select>
	
	<!-- 회원 검색 후 총 회원 수 -->
	<select id="searchUserCountForAdmin" parameterType="java.util.Map" resultType="int">
		select count(*) from users_t
		<where>
			<if test="u_id != null">
				lower(u_id) like lower('%'||#{u_id}||'%') and
			</if>
			<if test="nickname != null">
				lower(nickname) like lower('%'||#{nickname}||'%') and
			</if>
			<if test="u_name != null">
				lower(u_name) like lower('%'||#{u_name}||'%') and
			</if>
			<if test="email != null">
				lower(email) like lower('%'||#{email}||'%') and
			</if>
			<if test="sns_id != null">
				lower(sns_id) like lower('%'||#{sns_id}||'%') and
			</if>
			<if test="reg_date != null">
				to_char(reg_date, 'YYYY-MM-DD') = #{reg_date} and
			</if>
			<if test="total != null">
				status in(0, 1, 2) and
			</if>
			<if test="active != null and stop != null">
				status in(0, 2) and
			</if>
			<if test="active != null and leave != null">
				status in(0, 1) and
			</if>
			<if test="stop != null and leave != null">
				status in(1, 2) and
			</if>
			<if test="active != null">
				status = 0 and
			</if>
			<if test="stop != null">
				status = 2 and
			</if>
			<if test="leave != null">
				status = 1 and
			</if>
			<if test="choice == 'all'">
				(u_id is not null or sns_id is not null)
			</if>
			<if test="choice == 'normal'">
				u_id is not null
			</if>
			<if test="choice == 'social'">
				sns_id is not null
			</if>
		</where>
	</select>
	
	<!-- 회원 검색 기능 -->
	<select id="searchUserForAdmin" parameterType="java.util.Map" resultMap="map4">
		select * from(
			select rownum r_num, a.* from
				(select u_idx, u_id, email, u_phone, reg_date, u_name, nickname, sns_id, sns_type, sns_profile, status from users_t
				<where>
					<if test="u_id != null">
						lower(u_id) like lower('%'||#{u_id}||'%') and
					</if>
					<if test="nickname != null">
						lower(nickname) like lower('%'||#{nickname}||'%') and
					</if>
					<if test="u_name != null">
						lower(u_name) like lower('%'||#{u_name}||'%') and
					</if>
					<if test="email != null">
						lower(email) like lower('%'||#{email}||'%') and
					</if>
					<if test="sns_id != null">
						lower(sns_id) like lower('%'||#{sns_id}||'%') and
					</if>
					<if test="reg_date != null">
						to_char(reg_date, 'YYYY-MM-DD') = #{reg_date} and
					</if>
					<if test="total != null">
						status in(0, 1, 2) and
					</if>
					<if test="active != null and stop != null">
						status in(0, 2) and
					</if>
					<if test="active != null and leave != null">
						status in(0, 1) and
					</if>
					<if test="stop != null and leave != null">
						status in(1, 2) and
					</if>
					<if test="active != null">
						status = 0 and
					</if>
					<if test="stop != null">
						status = 2 and
					</if>
					<if test="leave != null">
						status = 1 and
					</if>
					<if test="choice == 'all'">
						(u_id is not null or sns_id is not null)
					</if>
					<if test="choice == 'normal'">
						u_id is not null
					</if>
					<if test="choice == 'social'">
						sns_id is not null
					</if>
				</where>
			order by u_idx desc) a
		)where r_num between #{begin} and #{end}
	</select>
	
	<!-- 이전 비밀번호 확인 -->
	<select id="checkPrePw" parameterType="java.util.Map" resultType="com.pmd.vo.UserVO">
		select u_idx, u_id, email, u_phone, reg_date, u_name, nickname, sns_id, sns_type, sns_profile, status from users_t where u_idx = #{u_idx} and u_pw = #{u_pw}
	</select>
	
	<!-- 회원 정보 수정 후 로그인 정보 갱신 후 세션 저장용 -->
	<select id="afterUpdateUserInfo" parameterType="String" resultType="com.pmd.vo.UserVO">
		select u_idx, u_id, email, u_phone, reg_date, u_name, nickname, sns_id, sns_type, sns_profile, status from users_t where u_idx = #{u_idx}
	</select>

</mapper>